version: "2"
services:
  screenly-server:
    build:
      context: .
      dockerfile: docker/Dockerfile.server.template
    environment:
      - HOME=/data
      - LISTEN=0.0.0.0
      - PYTHONPATH=/data/screenly
      - SCREENLYSERVICE=server
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    ports:
      - 80:8080
    privileged: true
    restart: always
    volumes:
      - resin-data:/data

  screenly-viewer:
    build:
      context: .
      dockerfile: docker/Dockerfile.viewer.template
    depends_on:
      - screenly-server
    environment:
      - DISPLAY=:0.0
      - HOME=/data
      - NOREFRESH=1
      - PYTHONPATH=/data/screenly
      - SCREENLYSERVICE=viewer
      - LISTEN=screenly-server
      - PORT=80
    privileged: true
    restart: always
    volumes:
      - resin-data:/data

  screenly-websocket:
    build:
      context: .
      dockerfile: docker/Dockerfile.websocket.template
    depends_on:
      - screenly-server
    environment:
      - HOME=/data
      - PYTHONPATH=/data/screenly
      - SCREENLYSERVICE=websocket
      - LISTEN=screenly-server
    ports:
      - 9999:9999
    privileged: true
    restart: always
    volumes:
      - resin-data:/data

  screenly-celery:
    build:
      context: .
      dockerfile: docker/Dockerfile.celery.template
    depends_on:
      - screenly-server
      - redis
    environment:
      - HOME=/data
      - PYTHONPATH=/data/screenly
      - SCREENLYSERVICE=celery
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    privileged: true
    restart: always
    volumes:
      - resin-data:/data

  redis:
    build:
      context: .
      dockerfile: docker/Dockerfile.redis.template
    restart: always

volumes:
    resin-data:
