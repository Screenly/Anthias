upstream ose {
  server 127.0.0.1:8080;
}

upstream websocket {
  server 127.0.0.1:9999;
}

upstream wifi-connect {
  server 192.168.42.1:9090;
}

server {
  server_tokens off;
  listen 80 default_server;

  location / {
    return 301 https://$host$request_uri;
  }
}

server {
  server_tokens off;
  listen 443 default_server;

  ssl on;
  ssl_certificate /etc/ssl/screenly.crt;
  ssl_certificate_key /etc/ssl/screenly.key;

  location / {
    if (-f /home/pi/.screenly/initialized) {
      proxy_pass http://ose;
    }
    if (!-f /home/pi/.screenly/initialized) {
      proxy_pass http://wifi-connect;
    }

    client_max_body_size 4G;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_set_header X-Forwarded-Protocol https;
  }

  location ~ ^/api/[0-9a-z]+/backup$ {
    proxy_pass http://ose;
    proxy_connect_timeout 1800;
    proxy_send_timeout 1800;
    proxy_read_timeout 1800;
    send_timeout 1800;

    client_max_body_size 4G;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_set_header X-Forwarded-Protocol https;
  }

  location /static {
    proxy_pass http://ose/static;
  }

  location /ws/ {
    proxy_pass http://websocket;
    proxy_read_timeout 24d;
    chunked_transfer_encoding off;
    proxy_http_version 1.1;
    proxy_buffering   off;

    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
    proxy_set_header Host $http_host;
  }

  location /hotspot {
    allow 127.0.0.1;
    deny all;

    if (!-f /home/pi/.screenly/initialized) {
      root /tmp;
      rewrite ^ /hotspot.html break;
    }
  }
}
