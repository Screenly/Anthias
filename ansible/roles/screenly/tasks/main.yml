---
- name: Ensure folders exist
  ansible.builtin.file:
    path: "/home/{{ lookup('env', 'USER') }}/{{ item }}"
    state: directory
    owner: "{{ lookup('env', 'USER') }}"
    group: "{{ lookup('env', 'USER') }}"
    mode: "0755"
  with_items:
    - .screenly
    - .config
    - screenly_assets

- name: Copy Screenly default assets file
  ansible.builtin.copy:
    owner: "{{ lookup('env', 'USER') }}"
    group: "{{ lookup('env', 'USER') }}"
    mode: "0644"
    src: default_assets.yml
    dest: "/home/{{ lookup('env', 'USER') }}/.screenly/default_assets.yml"
    force: true

- name: Remove deprecated parameter "listen"
  ansible.builtin.lineinfile:
    regexp: '^.*listen.*'
    state: absent
    dest: "/home/{{ lookup('env', 'USER') }}/.screenly/screenly.conf"

- name: Install pip dependencies
  ansible.builtin.pip:
    executable: "/home/{{ lookup('env', 'USER') }}/installer_venv/bin/pip"
    requirements: "/home/{{ lookup('env', 'USER') }}/screenly/requirements/requirements.host.txt"
    extra_args: "--no-cache-dir --upgrade"

- name: Remove screenly_utils.sh
  ansible.builtin.file:
    state: absent
    path: /usr/local/bin/screenly_utils.sh

- name: Cron job to cleanup screenly_assets
  ansible.builtin.cron:
    name: Cleanup screenly_assets
    state: absent
    user: "{{ lookup('env', 'USER') }}"

- name: Download upgrade script from github repository
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/Screenly/Anthias/master/bin/install.sh
    dest: /usr/local/sbin/upgrade_anthias.sh
    mode: "0700"
    owner: root
    group: root
    force: true

- name: Remove the old upgrade script
  ansible.builtin.file:
    state: absent
    path: /usr/local/sbin/upgrade_screenly.sh
    owner: root
    group: root

- name: Copy screenly_overrides
  ansible.builtin.copy:
    src: screenly_overrides
    dest: /etc/sudoers.d/screenly_overrides
    mode: "0440"
    owner: root
    group: root

- name: Remove /usr/local/bin/screenly_usb_assets.sh (deprecated)
  ansible.builtin.file:
    state: absent
    path: /usr/local/bin/screenly_usb_assets.sh
    owner: root
    group: root

- name: Cleans up autoplay udev rule
  ansible.builtin.file:
    state: absent
    path: /etc/udev/rules.d/50-autoplay.rules

- name: Copy screenly systemd units
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "/etc/systemd/system/{{ item }}"
    mode: "0644"
    owner: root
    group: root
  with_items: "{{ screenly_systemd_units }}"

- name: Remove plymouth-quit-wait.service
  ansible.builtin.file:
    state: absent
    dest: /lib/systemd/system/plymouth-quit-wait.service

- name: Remove plymouth-quit.service
  ansible.builtin.file:
    state: absent
    dest: /lib/systemd/system/plymouth-quit.service

- name: Enable screenly systemd services
  ansible.builtin.systemd:
    name: "{{ item }}"
    state: stopped
    enabled: true
  with_items: "{{ screenly_systemd_units }}"

- name: Check if deprecated systemd services exists
  ansible.builtin.stat:
    path: /etc/systemd/system/X.service
  register: x_service

- name: Set the x_service fact
  ansible.builtin.set_fact:
    x_service_exist: "{{ x_service.stat.exists }}"

- name: Disable deprecated systemd services
  ansible.builtin.systemd:
    name: "{{ item }}"
    state: stopped
    enabled: false
  with_items: "{{ deprecated_screenly_systemd_units }}"
  when: x_service_exist

- name: Remove deprecated systemd units
  ansible.builtin.file:
    path: "/etc/systemd/system/{{ item }}"
    state: absent
  with_items: "{{ deprecated_screenly_systemd_units }}"

- name: Remove the ngrok binary
  ansible.builtin.file:
    path: "/usr/local/bin/ngrok"
    state: absent
    owner: root
    group: root
