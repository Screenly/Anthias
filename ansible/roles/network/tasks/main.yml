---
- name: Check if screenly-network-manager files exist
  ansible.builtin.stat:
    path: /usr/sbin/screenly_net_mgr.py
  register: screenly_network_manager

- name: Check if screenly-network-manager is set
  ansible.builtin.set_fact:
    screenly_network_manager_exist: "{{ screenly_network_manager.stat.exists }}"

- name: Copy network systemd units
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "/etc/systemd/system/{{ item }}"
    mode: "0644"
    owner: root
    group: root
  with_items: "{{ network_systemd_units }}"

- name: Enable network systemd services
  ansible.builtin.systemd:
    name: "{{ item }}"
    state: started
    enabled: true
  with_items: "{{ network_systemd_units }}"

- name: Disable network manager
  ansible.builtin.systemd:
    state: stopped
    name: screenly-net-manager.service
    enabled: false
  when: screenly_network_manager_exist

- name: Disable network watchdog
  ansible.builtin.systemd:
    state: stopped
    name: screenly-net-watchdog.timer
    enabled: false
  when: screenly_network_manager_exist

- name: Remove network manager and watchdog
  ansible.builtin.file:
    state: absent
    path: "/usr/sbin/{{ item }}"
  with_items:
    - screenly_net_mgr.py
    - screenly_net_watchdog.py

- name: Remove network manager and watchdog unit files
  ansible.builtin.file:
    state: absent
    path: "/etc/systemd/system/{{ item }}"
  with_items:
    - screenly-net-manager.service
    - screenly-net-watchdog.service

- name: Remove network watchdog timer file
  ansible.builtin.file:
    state: absent
    path: /etc/systemd/system/screenly-net-watchdog.timer

- name: Debug msg for manage network
  ansible.builtin.debug:
    msg: "Manage network: {{ manage_network }}"

- name: Add current user to Identity
  ansible.builtin.replace:
    regexp: '^Identity=.*'
    replace: "Identity=unix-group:netdev;unix-group:sudo:{{ lookup('env', 'USER') }}"
    dest: /var/lib/polkit-1/localauthority/10-vendor.d/org.freedesktop.NetworkManager.pkla
  when: manage_network|bool

- name: Set ResultAny to yes
  ansible.builtin.replace:
    regexp: '^ResultAny=.*'
    replace: 'ResultAny=yes'
    dest: /var/lib/polkit-1/localauthority/10-vendor.d/org.freedesktop.NetworkManager.pkla
  when: manage_network|bool

- name: Get stat of org.freedesktop.NetworkManager.pkla
  ansible.builtin.stat:
    path: /etc/polkit-1/localauthority/50-local.d/org.freedesktop.NetworkManager.pkla
  register: nm_pkla_path

- name: Copy org.freedesktop.NetworkManager.pkla to 50-local.d
  ansible.builtin.shell: |
    mkdir -p /etc/polkit-1/localauthority/50-local.d
    cp -f /var/lib/polkit-1/localauthority/10-vendor.d/org.freedesktop.NetworkManager.pkla \
      /etc/polkit-1/localauthority/50-local.d
  when: manage_network|bool
  changed_when: not nm_pkla_path.stat.exists

- name: Disable dhcpcd
  ansible.builtin.systemd:
    state: stopped
    name: dhcpcd
    enabled: false
  when:
    - ansible_distribution_major_version|int >= 9
    - ansible_distribution_major_version|int <= 11
    - manage_network|bool

- name: Activate NetworkManager
  ansible.builtin.systemd:
    state: started
    name: NetworkManager
    enabled: true
  when:
    - ansible_distribution_major_version|int >= 9
    - manage_network|bool
