
#- name: test for available disk space
#  assert:
#    that:
#     - "{{ item.size_available > 500 * 1000 * 1000 }}" # 500Mb
#  when: "{{ item.mount == '/' }}"
#  with_items: "{{ ansible_mounts }}"


# We need custom handling for BerryBoot as it lacks `/boot`.
# To detect this, the image creates `/etc/berryboot`.
- stat:
    path: /etc/berryboot
  register: berryboot

- set_fact: is_berryboot="{{berryboot.stat.exists}}"

- name: Make sure we have proper framebuffer depth
  lineinfile:
    dest: /boot/config.txt
    regexp: ^framebuffer_depth=
    line: framebuffer_depth=32
  when: not is_berryboot

- name: Fix framebuffer bug
  lineinfile:
    dest: /boot/config.txt
    regexp: ^framebuffer_ignore_alpha=
    line: framebuffer_ignore_alpha=1
  when: not is_berryboot

- name: Backup kernel boot args
  copy:
    src: /boot/cmdline.txt
    dest: /boot/cmdline.txt.orig
    force: no
  when: not is_berryboot

- debug:
    msg: "Use cmdline.txt.orig for boot parameters (don't remove this file)"
  when: not is_berryboot

- copy:
    src: /boot/cmdline.txt.orig
    dest: /boot/cmdline.txt
    force: yes
  when: not is_berryboot

- name: Use systemd as init, quiet boot process
  lineinfile:
    dest: /boot/cmdline.txt
    regexp: (.*)
    backrefs: yes
    line: \1 quiet init=/lib/systemd/systemd
  when: not is_berryboot

- name: Installing Screenly's dependencies
  apt:
    name: "{{ item }}"
    state: latest
  with_items:
    - systemd
    - python-netifaces
    - python-simplejson
    - uzbl
    - sqlite3
    - omxplayer
    - matchbox
    - xserver-xorg
    - x11-xserver-utils

- name: Removing deprecated apt dependencies
  apt: name="{{ item }}" state=absent
  with_items:
    - supervisor
    - lightdm
- name: Removing deprecated pip dependencies
  pip:
    name: supervisor
    state: absent
