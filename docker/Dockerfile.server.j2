{% if environment == 'production' %}
FROM debian:bookworm AS node-builder

# Install node dependencies first to leverage cache
RUN apt-get update && \
    apt-get -y install \
        nodejs \
        npm && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy only package files first to leverage cache
COPY package.json package-lock.json ./
RUN npm ci

# Copy only the necessary files for the build
COPY webpack.prod.js webpack.common.js ./
COPY ./static/js/*.coffee ./static/js/
COPY ./static/sass/*.scss ./static/sass/

# Run the build
RUN npm run build

{% endif %}
{% include 'Dockerfile.base.j2' %}

COPY requirements/requirements.txt /tmp/requirements.txt
{% if disable_cache_mounts %}
RUN \
{% else %}
RUN --mount=type=cache,target=/root/.cache/pip \
{% endif %}
    pip3 install -r /tmp/requirements.txt --break-system-packages

# Set up application directory
WORKDIR /usr/src/app

# Copy application code
COPY . .

{% if environment == 'production' %}
COPY --from=node-builder \
    /app/static/dist/ \
    /usr/src/app/static/dist/
{% endif %}

ENV GIT_HASH={{ git_hash }}
ENV GIT_SHORT_HASH={{ git_short_hash }}
ENV GIT_BRANCH={{ git_branch }}
ENV DEVICE_TYPE={{ board }}

CMD ["bash", "bin/start_server.sh"]
