upstream ose {
  server srly-ose-server:8080;
}

upstream wifi-connect {
  server 192.168.42.1:9090;
}

upstream websocket {
  server srly-ose-websocket:9999;
}

server {
  server_tokens off;
  listen 80 default_server;

  location / {

    # Temporarily disables wifi-connect
    proxy_pass http://ose;

    #if (-f /data/.screenly/initialized) {
    #  proxy_pass http://ose;
    #}
    #if (!-f /data/.screenly/initialized) {
    #  proxy_pass http://wifi-connect;
    #}

    client_max_body_size 4G;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
  }

  location ~ ^/api/[0-9a-z]+/backup$ {
    proxy_pass http://ose;
    proxy_connect_timeout 1800;
    proxy_send_timeout 1800;
    proxy_read_timeout 1800;
    send_timeout 1800;

    client_max_body_size 4G;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
  }

  location /static {
    proxy_pass http://ose/static;
  }

  location /hotspot {
    # Only allow from Docker's CIDR
    allow 172.17.0.0/16;
    deny all;

    if (!-f /data/.screenly/initialized) {
      root /tmp;
      rewrite ^ /hotspot.html break;
    }
  }
}

server {
    # Only allow from localhost and Docker's CIDR
    allow 172.17.0.0/16;
    allow 172.0.0.1;
    deny all;

    server_name    *.ngrok.io;
    listen         80;
    root           /data/screenly_assets;
    try_files $uri /data/screenly_assets$uri;
}
